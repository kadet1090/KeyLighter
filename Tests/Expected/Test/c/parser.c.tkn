{language.c:Kadet\Highlighter\Parser\Token\LanguageToken}{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}include{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"parser.h"{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{/preprocessor:Kadet\Highlighter\Parser\Token\Token}
{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}include{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} {string:Kadet\Highlighter\Parser\Token\Token}<stdlib.h>{/string:Kadet\Highlighter\Parser\Token\Token}{/preprocessor:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}char{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}operator_get_priority{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind) {
    {keyword:Kadet\Highlighter\Parser\Token\Token}switch{/keyword:Kadet\Highlighter\Parser\Token\Token}(kind) {
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_ASSIGN:  {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}1{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_OR:      {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}2{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_AND:     {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}3{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_EQ:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_NEQ: {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}4{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_LE:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_GE:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_LEQ:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_GEQ: {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}5{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_ADD:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_SUB:     {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}6{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_DIV:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_MUL:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_MOD:     {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}7{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_NEG:
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_MINUS_U: {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}8{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    }

    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}-{/operator:Kadet\Highlighter\Parser\Token\Token}{number:Kadet\Highlighter\Parser\Token\Token}1{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}bool{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}operator_is_left{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind) {
	{keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} kind {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_ASSIGN {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} kind {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_NEG {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} kind {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_MINUS_U{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}expression_push{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} expr{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}token_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} token) {
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}_stack_elem{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} elem {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (_stack_elem{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}){call:Kadet\Highlighter\Parser\Token\Token}malloc{/call:Kadet\Highlighter\Parser\Token\Token}({keyword:Kadet\Highlighter\Parser\Token\Token}sizeof{/keyword:Kadet\Highlighter\Parser\Token\Token}(_stack_elem)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    elem{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    elem{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} token{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}(expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}) {
        expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} elem{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}  {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} elem{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    }

    expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} elem{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} elem{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}expression_destroy{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} expr)
{
	{keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}(expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {
		{symbol.type:Kadet\Highlighter\Parser\Token\Token}_stack_elem{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} tmp {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
		expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

        {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}(tmp{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} T_VAR) {call:Kadet\Highlighter\Parser\Token\Token}free{/call:Kadet\Highlighter\Parser\Token\Token}(tmp{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}value{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}str{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

		{call:Kadet\Highlighter\Parser\Token\Token}free{/call:Kadet\Highlighter\Parser\Token\Token}(tmp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
	}
}

inline {symbol.type:Kadet\Highlighter\Parser\Token\Token}bool{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}should_pop{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}token_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} op1{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}token_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} op2) {
    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} ( {call:Kadet\Highlighter\Parser\Token\Token}operator_is_left{/call:Kadet\Highlighter\Parser\Token\Token}(op1{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}operator_get_priority{/call:Kadet\Highlighter\Parser\Token\Token}(op1{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {operator:Kadet\Highlighter\Parser\Token\Token}<={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}operator_get_priority{/call:Kadet\Highlighter\Parser\Token\Token}(op2{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}))
        {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} ({operator:Kadet\Highlighter\Parser\Token\Token}!{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}operator_is_left{/call:Kadet\Highlighter\Parser\Token\Token}(op1{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}operator_get_priority{/call:Kadet\Highlighter\Parser\Token\Token}(op1{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token}  {call:Kadet\Highlighter\Parser\Token\Token}operator_get_priority{/call:Kadet\Highlighter\Parser\Token\Token}(op2{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token})){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser) {
     parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}tokenizer_next{/call:Kadet\Highlighter\Parser\Token\Token}(parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}tokenizer{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parser_init{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}tokenizer_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} tokenizer)
{
    parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}tokenizer{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} tokenizer{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}tokenizer_next{/call:Kadet\Highlighter\Parser\Token\Token}(tokenizer{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}       {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
	parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}statements{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}handle_tokens{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}stack_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} operators{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} expr) {
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}token_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} last {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} { T_L_PAREN }{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}token_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} current {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} parens {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {keyword:Kadet\Highlighter\Parser\Token\Token}do{/keyword:Kadet\Highlighter\Parser\Token\Token} {
        {keyword:Kadet\Highlighter\Parser\Token\Token}switch{/keyword:Kadet\Highlighter\Parser\Token\Token}(current{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_VAR:
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_LITERAL:
                {comment:Kadet\Highlighter\Parser\Token\Token}// Jezeli zmienna nastepuje po zmiennej - to cos poszlo grubo nie tak, a na powaznie to po prostu {/comment:Kadet\Highlighter\Parser\Token\Token}
                {comment:Kadet\Highlighter\Parser\Token\Token}// zaczelo sie nowe wyrazenie.{/comment:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} ({operator:Kadet\Highlighter\Parser\Token\Token}!{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}token_is_operator{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}last) {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} last.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_L_PAREN {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} last.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_L_BRACE) {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

                {call:Kadet\Highlighter\Parser\Token\Token}expression_push{/call:Kadet\Highlighter\Parser\Token\Token}(expr{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}current){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_L_PAREN:
                parens{operator:Kadet\Highlighter\Parser\Token\Token}++{/operator:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} ({operator:Kadet\Highlighter\Parser\Token\Token}!{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}token_is_operator{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}last) {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} last.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_L_PAREN {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} last.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_L_BRACE) {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                
                {call:Kadet\Highlighter\Parser\Token\Token}stack_push{/call:Kadet\Highlighter\Parser\Token\Token}(operators{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}current){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_R_PAREN:
                {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}!{/operator:Kadet\Highlighter\Parser\Token\Token}parens) {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

                {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}!{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}stack_empty{/call:Kadet\Highlighter\Parser\Token\Token}(operators) {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} operators{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}current{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_L_PAREN)
                    {call:Kadet\Highlighter\Parser\Token\Token}expression_push{/call:Kadet\Highlighter\Parser\Token\Token}(expr{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}stack_pop{/call:Kadet\Highlighter\Parser\Token\Token}(operators)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                
                parens{operator:Kadet\Highlighter\Parser\Token\Token}--{/operator:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

                {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}({call:Kadet\Highlighter\Parser\Token\Token}stack_empty{/call:Kadet\Highlighter\Parser\Token\Token}(operators)) {
                    {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stderr{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"Cos poszlo nie tak z nawiasami"{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                    {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                }

                {call:Kadet\Highlighter\Parser\Token\Token}stack_pop{/call:Kadet\Highlighter\Parser\Token\Token}(operators){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

             {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_L_BRACE:
             {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_R_BRACE:
             {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_IF:
             {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_WHILE:
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}({call:Kadet\Highlighter\Parser\Token\Token}token_is_operator{/call:Kadet\Highlighter\Parser\Token\Token}(current)) {
            {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}!{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}stack_empty{/call:Kadet\Highlighter\Parser\Token\Token}(operators) {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}should_pop{/call:Kadet\Highlighter\Parser\Token\Token}(current{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}operators{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}current{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token}))       
                {call:Kadet\Highlighter\Parser\Token\Token}expression_push{/call:Kadet\Highlighter\Parser\Token\Token}(expr{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}stack_pop{/call:Kadet\Highlighter\Parser\Token\Token}(operators)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            
            {call:Kadet\Highlighter\Parser\Token\Token}stack_push{/call:Kadet\Highlighter\Parser\Token\Token}(operators{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}current){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        last {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}current{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    } {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}(current{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_EOF){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_alloc{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_kind_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}any_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} data {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}) 
{
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} result {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (statement_t{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}){call:Kadet\Highlighter\Parser\Token\Token}malloc{/call:Kadet\Highlighter\Parser\Token\Token}({keyword:Kadet\Highlighter\Parser\Token\Token}sizeof{/keyword:Kadet\Highlighter\Parser\Token\Token}(statement_t)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    result{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} kind{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    result{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} data{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} result{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}define{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} EXPECTED{language.c:Kadet\Highlighter\Parser\Token\LanguageToken}(token) {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}(parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} token) { {operator.escape:Kadet\Highlighter\Parser\Token\Token}\
{/operator.escape:Kadet\Highlighter\Parser\Token\Token}    {symbol.type:Kadet\Highlighter\Parser\Token\Token}char{/symbol.type:Kadet\Highlighter\Parser\Token\Token} tn[{number:Kadet\Highlighter\Parser\Token\Token}10{/number:Kadet\Highlighter\Parser\Token\Token}]{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator.escape:Kadet\Highlighter\Parser\Token\Token}\
{/operator.escape:Kadet\Highlighter\Parser\Token\Token}    {call:Kadet\Highlighter\Parser\Token\Token}kind_to_str{/call:Kadet\Highlighter\Parser\Token\Token}(parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} tn){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator.escape:Kadet\Highlighter\Parser\Token\Token}\
{/operator.escape:Kadet\Highlighter\Parser\Token\Token}    {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stderr{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"Expected "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken} #token {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}", got {keyword.format:Kadet\Highlighter\Parser\Token\Token}%s{/keyword.format:Kadet\Highlighter\Parser\Token\Token}.{operator.escape:Kadet\Highlighter\Parser\Token\Token}\n{/operator.escape:Kadet\Highlighter\Parser\Token\Token}"{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} tn){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator.escape:Kadet\Highlighter\Parser\Token\Token}\
{/operator.escape:Kadet\Highlighter\Parser\Token\Token}    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator.escape:Kadet\Highlighter\Parser\Token\Token}\
{/operator.escape:Kadet\Highlighter\Parser\Token\Token}{/language.c:Kadet\Highlighter\Parser\Token\LanguageToken}}{/preprocessor:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_conditional{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser) 
{
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}conditional_jump_s{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} cjmps {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (conditional_jump_s{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}){call:Kadet\Highlighter\Parser\Token\Token}malloc{/call:Kadet\Highlighter\Parser\Token\Token}({keyword:Kadet\Highlighter\Parser\Token\Token}sizeof{/keyword:Kadet\Highlighter\Parser\Token\Token}(conditional_jump_s)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    
    {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {call:Kadet\Highlighter\Parser\Token\Token}EXPECTED{/call:Kadet\Highlighter\Parser\Token\Token}(T_L_PAREN){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    
    cjmps{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}condition{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_expression{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    
    {call:Kadet\Highlighter\Parser\Token\Token}EXPECTED{/call:Kadet\Highlighter\Parser\Token\Token}(T_R_PAREN){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {call:Kadet\Highlighter\Parser\Token\Token}EXPECTED{/call:Kadet\Highlighter\Parser\Token\Token}(T_L_BRACE){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} statement {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_push{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} S_CJMP{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} cjmps){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}(parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_R_BRACE) {call:Kadet\Highlighter\Parser\Token\Token}parse_statement{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}(kind {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} T_WHILE) {call:Kadet\Highlighter\Parser\Token\Token}statement_list_push{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} S_JUMP{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} statement){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} noop {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_push{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} S_NOPR){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    cjmps{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}jump{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} noop{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
   
    {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_statement{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser) {
    {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}(parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} T_IF {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} T_WHILE) {
        {call:Kadet\Highlighter\Parser\Token\Token}parse_conditional{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} 
    }

    {symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} expr {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (expression_t{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}){call:Kadet\Highlighter\Parser\Token\Token}malloc{/call:Kadet\Highlighter\Parser\Token\Token}({keyword:Kadet\Highlighter\Parser\Token\Token}sizeof{/keyword:Kadet\Highlighter\Parser\Token\Token}(expression_t)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}expr {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_expression{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {call:Kadet\Highlighter\Parser\Token\Token}statement_list_push{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} S_EXPR{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} expr){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_all{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser) {
    {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}(parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} T_EOF) {
        {call:Kadet\Highlighter\Parser\Token\Token}parse_statement{/call:Kadet\Highlighter\Parser\Token\Token}(parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    }
    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} parser{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}list{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_expression{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser)
{
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}stack_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} operators   {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {  }{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} 
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} output {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {  }{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
 
    {call:Kadet\Highlighter\Parser\Token\Token}handle_tokens{/call:Kadet\Highlighter\Parser\Token\Token}(parser{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}operators{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}output){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}!{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}stack_empty{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}operators)) {call:Kadet\Highlighter\Parser\Token\Token}expression_push{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}output{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}stack_pop{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}operators)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} output{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}expression_print{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} expr{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}FILE{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} stream) {
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}_stack_elem{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} current {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} expr{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}(current) {
        {keyword:Kadet\Highlighter\Parser\Token\Token}switch{/keyword:Kadet\Highlighter\Parser\Token\Token}(current{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_LITERAL: {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"{keyword.format:Kadet\Highlighter\Parser\Token\Token}%d{/keyword.format:Kadet\Highlighter\Parser\Token\Token} "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} current{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}value{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}val{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}value{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_VAR:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"{keyword.format:Kadet\Highlighter\Parser\Token\Token}%s{/keyword.format:Kadet\Highlighter\Parser\Token\Token} "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} current{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}token{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}value{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}str{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_ADD:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"+ "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_SUB:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"- "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_MUL:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"* "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_DIV:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"/ "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_MOD:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"{keyword.format:Kadet\Highlighter\Parser\Token\Token}%%{/keyword.format:Kadet\Highlighter\Parser\Token\Token} "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_EQ:  {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"== "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_NEQ: {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"!= "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_LE:  {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"< "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_GE:  {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"> "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_LEQ: {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"<= "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_CMP_GEQ: {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}">= "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_MINUS_U: {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"- "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_NEG:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"! "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_AND:     {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"& "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_OR:      {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"| "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} T_ASSIGN:  {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"= "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        current {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} current{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    }
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_push{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} list{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_kind_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}any_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} data) 
{
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} statement {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (statement_t{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token}){call:Kadet\Highlighter\Parser\Token\Token}malloc{/call:Kadet\Highlighter\Parser\Token\Token}({keyword:Kadet\Highlighter\Parser\Token\Token}sizeof{/keyword:Kadet\Highlighter\Parser\Token\Token}(statement_t)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} kind{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} data{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}id{/variable.property:Kadet\Highlighter\Parser\Token\Token}   {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}statements{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}++{/operator:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}(list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}) {
        list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} statement{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    } {keyword:Kadet\Highlighter\Parser\Token\Token}else{/keyword:Kadet\Highlighter\Parser\Token\Token} {
        list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} statement{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}last{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} statement{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    }

    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} statement{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_destroy{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} list)
{
	{symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} iter {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
	{keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token} (iter) {
		{keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} S_CJMP) {
			{call:Kadet\Highlighter\Parser\Token\Token}expression_destroy{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}((conditional_jump_s{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token})iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}condition{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
			{call:Kadet\Highlighter\Parser\Token\Token}free{/call:Kadet\Highlighter\Parser\Token\Token}(iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
		} {keyword:Kadet\Highlighter\Parser\Token\Token}else{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token}(iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} S_EXPR) {
			{call:Kadet\Highlighter\Parser\Token\Token}expression_destroy{/call:Kadet\Highlighter\Parser\Token\Token}((expression_t{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token})iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
			{call:Kadet\Highlighter\Parser\Token\Token}free{/call:Kadet\Highlighter\Parser\Token\Token}(iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
		}

		{symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} tmp {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} iter{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
		iter {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

		{call:Kadet\Highlighter\Parser\Token\Token}free{/call:Kadet\Highlighter\Parser\Token\Token}(tmp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
	}
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_print{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} statement{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}FILE{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} stream) {
    {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"#%03d: "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}id{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {keyword:Kadet\Highlighter\Parser\Token\Token}switch{/keyword:Kadet\Highlighter\Parser\Token\Token}(statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}kind{/variable.property:Kadet\Highlighter\Parser\Token\Token}) {
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} S_NOPR:
            {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"NOPR"{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} S_JUMP:
            {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"JUMP #%03d"{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} ((statement_t{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token})statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}id{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} S_CJMP:
            {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"CJMP #%03d if "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} ((conditional_jump_s{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token})statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}jump{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}id{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {call:Kadet\Highlighter\Parser\Token\Token}expression_print{/call:Kadet\Highlighter\Parser\Token\Token}({operator:Kadet\Highlighter\Parser\Token\Token}&{/operator:Kadet\Highlighter\Parser\Token\Token}((conditional_jump_s{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token})statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}condition{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} stream){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} S_EXPR:
            {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"EXPR "{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {call:Kadet\Highlighter\Parser\Token\Token}expression_print{/call:Kadet\Highlighter\Parser\Token\Token}((expression_t{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token})statement{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}data{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} stream){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}break{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    }
}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_print{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} list{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}FILE{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} stream)
{
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} iter {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} list{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}first{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {keyword:Kadet\Highlighter\Parser\Token\Token}while{/keyword:Kadet\Highlighter\Parser\Token\Token}(iter) {
        {call:Kadet\Highlighter\Parser\Token\Token}statement_print{/call:Kadet\Highlighter\Parser\Token\Token}(iter{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} stream){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        {call:Kadet\Highlighter\Parser\Token\Token}fprintf{/call:Kadet\Highlighter\Parser\Token\Token}(stream{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"{operator.escape:Kadet\Highlighter\Parser\Token\Token}\n{/operator.escape:Kadet\Highlighter\Parser\Token\Token}"{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

        iter {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} iter{operator:Kadet\Highlighter\Parser\Token\Token}->{/operator:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}next{/variable.property:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    }
}
{/language.c:Kadet\Highlighter\Parser\Token\LanguageToken}