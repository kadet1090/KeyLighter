{language.c:Kadet\Highlighter\Parser\Token\LanguageToken}{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}ifndef{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} _PARSER_H_{/preprocessor:Kadet\Highlighter\Parser\Token\Token}
{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}define{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} _PARSER_H_{/preprocessor:Kadet\Highlighter\Parser\Token\Token}

{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}include{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} {string.double:Kadet\Highlighter\Parser\Token\ContextualToken}"tokens.h"{/string.double:Kadet\Highlighter\Parser\Token\ContextualToken}{/preprocessor:Kadet\Highlighter\Parser\Token\Token}
{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}include{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} {string:Kadet\Highlighter\Parser\Token\Token}<stdio.h>{/string:Kadet\Highlighter\Parser\Token\Token}{/preprocessor:Kadet\Highlighter\Parser\Token\Token}

{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}define{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} S_EXPR{language.c:Kadet\Highlighter\Parser\Token\LanguageToken} {/language.c:Kadet\Highlighter\Parser\Token\LanguageToken}1{/preprocessor:Kadet\Highlighter\Parser\Token\Token}
{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}define{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} S_JUMP{language.c:Kadet\Highlighter\Parser\Token\LanguageToken} {/language.c:Kadet\Highlighter\Parser\Token\LanguageToken}2{/preprocessor:Kadet\Highlighter\Parser\Token\Token}
{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}define{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} S_CJMP{language.c:Kadet\Highlighter\Parser\Token\LanguageToken} {/language.c:Kadet\Highlighter\Parser\Token\LanguageToken}3{/preprocessor:Kadet\Highlighter\Parser\Token\Token}
{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}define{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token} S_NOPR{language.c:Kadet\Highlighter\Parser\Token\LanguageToken} {/language.c:Kadet\Highlighter\Parser\Token\LanguageToken}4{/preprocessor:Kadet\Highlighter\Parser\Token\Token}

{keyword:Kadet\Highlighter\Parser\Token\Token}typedef{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}char{/symbol.type:Kadet\Highlighter\Parser\Token\Token}  statement_kind_t{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{keyword:Kadet\Highlighter\Parser\Token\Token}typedef{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} any_t{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{keyword:Kadet\Highlighter\Parser\Token\Token}typedef{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}struct{/keyword:Kadet\Highlighter\Parser\Token\Token} statement {
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_kind_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} id{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}any_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} data{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} next{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}    
} statement_t{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{keyword:Kadet\Highlighter\Parser\Token\Token}typedef{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}struct{/keyword:Kadet\Highlighter\Parser\Token\Token} {
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} statements{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} first{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} last{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
} statement_list_t{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{keyword:Kadet\Highlighter\Parser\Token\Token}typedef{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}struct{/keyword:Kadet\Highlighter\Parser\Token\Token} expression {
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}_stack_elem{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} first{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}_stack_elem{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} last{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
} expression_t{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{keyword:Kadet\Highlighter\Parser\Token\Token}struct{/keyword:Kadet\Highlighter\Parser\Token\Token} conditional_jump_s { 
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} condition{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} jump{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{keyword:Kadet\Highlighter\Parser\Token\Token}typedef{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}struct{/keyword:Kadet\Highlighter\Parser\Token\Token} {
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}tokenizer_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} tokenizer{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {symbol.type:Kadet\Highlighter\Parser\Token\Token}token_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}      last{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

    {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} list{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
} parser_t{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}expression_push{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} expression{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}token_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} token){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}expression_destroy{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} expression){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}expression_print{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} e{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}FILE{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} stream){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_push{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} list{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_kind_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}any_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} data {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_destroy{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} list){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_list_print{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} list{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}FILE{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} stream){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}statement_print{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} statement{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}FILE{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} stream){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parser_init{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}tokenizer_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} tokenizer){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parser_advance{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}expression_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_expression{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_conditional{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}void{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_statement{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}statement_list_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}parse_all{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}parser_t{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}*{/operator:Kadet\Highlighter\Parser\Token\Token} parser){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{symbol.type:Kadet\Highlighter\Parser\Token\Token}char{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}operator_get_priority{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{symbol.type:Kadet\Highlighter\Parser\Token\Token}bool{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}operator_is_left{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} kind){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{preprocessor:Kadet\Highlighter\Parser\Token\Token}#{call.preprocessor:Kadet\Highlighter\Parser\Token\Token}endif{/call.preprocessor:Kadet\Highlighter\Parser\Token\Token}{/preprocessor:Kadet\Highlighter\Parser\Token\Token}
{/language.c:Kadet\Highlighter\Parser\Token\LanguageToken}