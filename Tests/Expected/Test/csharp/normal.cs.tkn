{language.csharp:Kadet\Highlighter\Parser\Token\LanguageToken}{keyword:Kadet\Highlighter\Parser\Token\Token}using{/keyword:Kadet\Highlighter\Parser\Token\Token} System{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Collections{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Generic{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{keyword:Kadet\Highlighter\Parser\Token\Token}using{/keyword:Kadet\Highlighter\Parser\Token\Token} System{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Collections{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}ObjectModel{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{keyword:Kadet\Highlighter\Parser\Token\Token}using{/keyword:Kadet\Highlighter\Parser\Token\Token} System{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Linq{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
{keyword:Kadet\Highlighter\Parser\Token\Token}using{/keyword:Kadet\Highlighter\Parser\Token\Token} System{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Linq{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expressions{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

{keyword:Kadet\Highlighter\Parser\Token\Token}namespace{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoDB{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Linq{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expressions
{
    {keyword:Kadet\Highlighter\Parser\Token\Token}internal{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}class{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionVisitor : ExpressionVisitor
    {
        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}override{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} exp)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (exp {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}switch{/keyword:Kadet\Highlighter\Parser\Token\Token} ((MongoExpressionType)exp{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}NodeType)
            {
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Collection:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitCollection{/call:Kadet\Highlighter\Parser\Token\Token}((CollectionExpression)exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Field:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitField{/call:Kadet\Highlighter\Parser\Token\Token}((FieldExpression)exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Projection:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitProjection{/call:Kadet\Highlighter\Parser\Token\Token}((ProjectionExpression)exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Select:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitSelect{/call:Kadet\Highlighter\Parser\Token\Token}((SelectExpression)exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Aggregate:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitAggregate{/call:Kadet\Highlighter\Parser\Token\Token}((AggregateExpression)exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}AggregateSubquery:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitAggregateSubquery{/call:Kadet\Highlighter\Parser\Token\Token}((AggregateSubqueryExpression)exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Scalar:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitScalar{/call:Kadet\Highlighter\Parser\Token\Token}((ScalarExpression)exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}default{/keyword:Kadet\Highlighter\Parser\Token\Token}:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}base{/keyword:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(exp){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            }
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitAggregate{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}AggregateExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} aggregate)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} exp {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(aggregate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Argument){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (exp {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} aggregate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Argument)
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}AggregateExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(aggregate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Type{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} aggregate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}AggregateType{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} exp{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} aggregate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Distinct){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} aggregate{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitAggregateSubquery{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}AggregateSubqueryExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} aggregateSubquery)
        {
            {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} e {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(aggregateSubquery{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}AggregateAsSubquery){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {symbol.class:Kadet\Highlighter\Parser\Token\Token}ScalarExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} subquery {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (ScalarExpression)e{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (subquery {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} aggregateSubquery{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}AggregateAsSubquery)
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}AggregateSubqueryExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(aggregateSubquery{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}GroupByAlias{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} aggregateSubquery{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}AggregateInGroupSelect{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} subquery){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} aggregateSubquery{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitCollection{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}CollectionExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} collection)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} collection{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitField{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}FieldExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} field)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} e {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(field{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expression){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (field{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expression {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} e)
                field {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}FieldExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(e{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} field{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Alias{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} field{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Name){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} field{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitProjection{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}ProjectionExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} projection)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} source {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (SelectExpression){call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(projection{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Source){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} projector {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(projection{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Projector){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (source {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} projection{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Source {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} projector {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} projection{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Projector)
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}ProjectionExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(source{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} projector{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} projection{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Aggregator){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} projection{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class.template:Kadet\Highlighter\Parser\Token\Token}ReadOnlyCollection{/symbol.class.template:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token}OrderExpression{operator:Kadet\Highlighter\Parser\Token\Token}>{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitOrderBy{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class.template:Kadet\Highlighter\Parser\Token\Token}ReadOnlyCollection{/symbol.class.template:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token}OrderExpression{operator:Kadet\Highlighter\Parser\Token\Token}>{/operator:Kadet\Highlighter\Parser\Token\Token} orderBys)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (orderBys {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
            {
                {symbol.class.template:Kadet\Highlighter\Parser\Token\Token}List{/symbol.class.template:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token}OrderExpression{operator:Kadet\Highlighter\Parser\Token\Token}>{/operator:Kadet\Highlighter\Parser\Token\Token} alternate {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}for{/keyword:Kadet\Highlighter\Parser\Token\Token} ({symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} i {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} n {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} orderBys{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Count{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} i {operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token} n{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} i{operator:Kadet\Highlighter\Parser\Token\Token}++{/operator:Kadet\Highlighter\Parser\Token\Token})
                {
                    {symbol.class:Kadet\Highlighter\Parser\Token\Token}OrderExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} expr {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} orderBys[i]{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                    {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} e {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {variable.special:Kadet\Highlighter\Parser\Token\Token}this{/variable.special:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(expr{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expression){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                    {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (alternate {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}&&{/operator:Kadet\Highlighter\Parser\Token\Token} e {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} expr{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expression)
                        alternate {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} orderBys{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}Take{/call:Kadet\Highlighter\Parser\Token\Token}(i){operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}ToList{/call:Kadet\Highlighter\Parser\Token\Token}(){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                    {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (alternate {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
                        alternate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}Add{/call:Kadet\Highlighter\Parser\Token\Token}({keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}OrderExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(expr{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}OrderType{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} e)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                }
                {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (alternate {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} alternate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}AsReadOnly{/call:Kadet\Highlighter\Parser\Token\Token}(){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            }
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} orderBys{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitScalar{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}ScalarExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} scalar)
        {
            {symbol.class:Kadet\Highlighter\Parser\Token\Token}SelectExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} select {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} (SelectExpression){call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(scalar{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Select){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (select {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} scalar{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Select)
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}ScalarExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(scalar{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Type{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} select){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} scalar{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitSelect{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}SelectExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} select)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} from {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitSource{/call:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}From){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} where {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Where){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} groupBy {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}GroupBy){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} orderBy {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitOrderBy{/call:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}OrderBy){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} skip {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Skip){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} take {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Take){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} fields {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitFieldDeclarationList{/call:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Fields){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (from {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}From {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} where {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Where {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} orderBy {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}OrderBy {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} groupBy {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}GroupBy {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} skip {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Skip {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} take {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Take {operator:Kadet\Highlighter\Parser\Token\Token}||{/operator:Kadet\Highlighter\Parser\Token\Token} fields {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Fields)
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}SelectExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Alias{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} fields{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} from{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} where{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} orderBy{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} groupBy{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} select{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}IsDistinct{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} skip{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} take){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} select{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitSource{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} source)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(source){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}Expression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitSubquery{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class:Kadet\Highlighter\Parser\Token\Token}SubqueryExpression{/symbol.class:Kadet\Highlighter\Parser\Token\Token} subquery)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}switch{/keyword:Kadet\Highlighter\Parser\Token\Token} ((MongoExpressionType)subquery{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}NodeType)
            {
                {keyword:Kadet\Highlighter\Parser\Token\Token}case{/keyword:Kadet\Highlighter\Parser\Token\Token} MongoExpressionType{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Scalar:
                    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitScalar{/call:Kadet\Highlighter\Parser\Token\Token}((ScalarExpression)subquery){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            }
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} subquery{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }

        {keyword:Kadet\Highlighter\Parser\Token\Token}protected{/keyword:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}virtual{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class.template:Kadet\Highlighter\Parser\Token\Token}ReadOnlyCollection{/symbol.class.template:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token}FieldDeclaration{operator:Kadet\Highlighter\Parser\Token\Token}>{/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}VisitFieldDeclarationList{/call:Kadet\Highlighter\Parser\Token\Token}({symbol.class.template:Kadet\Highlighter\Parser\Token\Token}ReadOnlyCollection{/symbol.class.template:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token}FieldDeclaration{operator:Kadet\Highlighter\Parser\Token\Token}>{/operator:Kadet\Highlighter\Parser\Token\Token} fields)
        {
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (fields {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} fields{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}

            {symbol.class.template:Kadet\Highlighter\Parser\Token\Token}List{/symbol.class.template:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token}FieldDeclaration{operator:Kadet\Highlighter\Parser\Token\Token}>{/operator:Kadet\Highlighter\Parser\Token\Token} alternate {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}for{/keyword:Kadet\Highlighter\Parser\Token\Token} ({symbol.type:Kadet\Highlighter\Parser\Token\Token}int{/symbol.type:Kadet\Highlighter\Parser\Token\Token} i {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} n {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} fields{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Count{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} i {operator:Kadet\Highlighter\Parser\Token\Token}<{/operator:Kadet\Highlighter\Parser\Token\Token} n{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} i{operator:Kadet\Highlighter\Parser\Token\Token}++{/operator:Kadet\Highlighter\Parser\Token\Token})
            {
                {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} f {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} fields[i]{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}var{/keyword:Kadet\Highlighter\Parser\Token\Token} e {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}Visit{/call:Kadet\Highlighter\Parser\Token\Token}(f{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expression){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (f{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Expression {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} e {operator:Kadet\Highlighter\Parser\Token\Token}&&{/operator:Kadet\Highlighter\Parser\Token\Token} alternate {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
                    alternate {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} fields{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}Take{/call:Kadet\Highlighter\Parser\Token\Token}(i){operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}ToList{/call:Kadet\Highlighter\Parser\Token\Token}(){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
                {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (alternate {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
                    alternate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}Add{/call:Kadet\Highlighter\Parser\Token\Token}({keyword:Kadet\Highlighter\Parser\Token\Token}new{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.class:Kadet\Highlighter\Parser\Token\Token}FieldDeclaration{/symbol.class:Kadet\Highlighter\Parser\Token\Token}(f{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}Name{operator:Kadet\Highlighter\Parser\Token\Token},{/operator:Kadet\Highlighter\Parser\Token\Token} e)){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            }
            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} (alternate {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}null{/constant.special:Kadet\Highlighter\Parser\Token\Token})
                {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} alternate{operator:Kadet\Highlighter\Parser\Token\Token}.{/operator:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}AsReadOnly{/call:Kadet\Highlighter\Parser\Token\Token}(){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
            {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} fields{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
        }
    }
}{/language.csharp:Kadet\Highlighter\Parser\Token\LanguageToken}