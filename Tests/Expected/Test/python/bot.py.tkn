{language.python:Kadet\Highlighter\Parser\Token\LanguageToken}{keyword:Kadet\Highlighter\Parser\Token\Token}import{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol:Kadet\Highlighter\Parser\Token\Token}discord{/symbol:Kadet\Highlighter\Parser\Token\Token}
{keyword:Kadet\Highlighter\Parser\Token\Token}import{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol:Kadet\Highlighter\Parser\Token\Token}asyncio{/symbol:Kadet\Highlighter\Parser\Token\Token}
{keyword:Kadet\Highlighter\Parser\Token\Token}import{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol:Kadet\Highlighter\Parser\Token\Token}re{/symbol:Kadet\Highlighter\Parser\Token\Token}

client {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}discord{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}Client{/call:Kadet\Highlighter\Parser\Token\Token}()

regex {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {
    {string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'score'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}: {variable:Kadet\Highlighter\Parser\Token\Token}re{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}compile{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'<@!?(.*?)>{operator.escape:Kadet\Highlighter\Parser\Token\Token}\s{/operator.escape:Kadet\Highlighter\Parser\Token\Token}*{operator.escape:Kadet\Highlighter\Parser\Token\Token}\+{/operator.escape:Kadet\Highlighter\Parser\Token\Token}{operator.escape:Kadet\Highlighter\Parser\Token\Token}\s{/operator.escape:Kadet\Highlighter\Parser\Token\Token}*({operator.escape:Kadet\Highlighter\Parser\Token\Token}\d{/operator.escape:Kadet\Highlighter\Parser\Token\Token}+|{operator.escape:Kadet\Highlighter\Parser\Token\Token}\+{/operator.escape:Kadet\Highlighter\Parser\Token\Token})'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken})
}


{keyword:Kadet\Highlighter\Parser\Token\Token}def{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}get_score{/call:Kadet\Highlighter\Parser\Token\Token}(score):
    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}max{/call:Kadet\Highlighter\Parser\Token\Token}({number:Kadet\Highlighter\Parser\Token\Token}0{/number:Kadet\Highlighter\Parser\Token\Token}, {call:Kadet\Highlighter\Parser\Token\Token}min{/call:Kadet\Highlighter\Parser\Token\Token}({number:Kadet\Highlighter\Parser\Token\Token}1{/number:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} score {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'+'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken} {keyword:Kadet\Highlighter\Parser\Token\Token}else{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}int{/call:Kadet\Highlighter\Parser\Token\Token}(score), {number:Kadet\Highlighter\Parser\Token\Token}50{/number:Kadet\Highlighter\Parser\Token\Token}))


{keyword:Kadet\Highlighter\Parser\Token\Token}def{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}get_nick{/call:Kadet\Highlighter\Parser\Token\Token}(member):
    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}member{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}nick{/variable.property:Kadet\Highlighter\Parser\Token\Token} {keyword:Kadet\Highlighter\Parser\Token\Token}or{/keyword:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}member{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}name{/variable.property:Kadet\Highlighter\Parser\Token\Token}


{keyword:Kadet\Highlighter\Parser\Token\Token}def{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}save_scores{/call:Kadet\Highlighter\Parser\Token\Token}(scores, path):
    file {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}open{/call:Kadet\Highlighter\Parser\Token\Token}(path, {string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}"w"{/string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken})
    {variable:Kadet\Highlighter\Parser\Token\Token}file{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}write{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'{operator.escape:Kadet\Highlighter\Parser\Token\Token}\n{/operator.escape:Kadet\Highlighter\Parser\Token\Token}'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}.{call:Kadet\Highlighter\Parser\Token\Token}join{/call:Kadet\Highlighter\Parser\Token\Token}([{string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'{} {}'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}.{call:Kadet\Highlighter\Parser\Token\Token}format{/call:Kadet\Highlighter\Parser\Token\Token}(id, score) {keyword:Kadet\Highlighter\Parser\Token\Token}for{/keyword:Kadet\Highlighter\Parser\Token\Token} id, score {keyword:Kadet\Highlighter\Parser\Token\Token}in{/keyword:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}scores{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}items{/call:Kadet\Highlighter\Parser\Token\Token}() ]))
    {variable:Kadet\Highlighter\Parser\Token\Token}file{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}close{/call:Kadet\Highlighter\Parser\Token\Token}()


{keyword:Kadet\Highlighter\Parser\Token\Token}def{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}load_scores{/call:Kadet\Highlighter\Parser\Token\Token}(path):
    {keyword:Kadet\Highlighter\Parser\Token\Token}try{/keyword:Kadet\Highlighter\Parser\Token\Token}:
        scores {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {}

        file {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}open{/call:Kadet\Highlighter\Parser\Token\Token}(path, {string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}"r"{/string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken})
        {keyword:Kadet\Highlighter\Parser\Token\Token}for{/keyword:Kadet\Highlighter\Parser\Token\Token} line {keyword:Kadet\Highlighter\Parser\Token\Token}in{/keyword:Kadet\Highlighter\Parser\Token\Token} file:
            (id, score) {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}line{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}split{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}' '{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken})
            scores[id] {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}int{/call:Kadet\Highlighter\Parser\Token\Token}(score)

        {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} scores
    {keyword:Kadet\Highlighter\Parser\Token\Token}except{/keyword:Kadet\Highlighter\Parser\Token\Token} FileNotFoundError:
        {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} {}

@{variable:Kadet\Highlighter\Parser\Token\Token}client{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}event{/variable.property:Kadet\Highlighter\Parser\Token\Token}
async {keyword:Kadet\Highlighter\Parser\Token\Token}def{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}on_ready{/call:Kadet\Highlighter\Parser\Token\Token}():
    {call:Kadet\Highlighter\Parser\Token\Token}print{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'Logged in as'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken})
    {call:Kadet\Highlighter\Parser\Token\Token}print{/call:Kadet\Highlighter\Parser\Token\Token}({variable:Kadet\Highlighter\Parser\Token\Token}client{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}user{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}name{/variable.property:Kadet\Highlighter\Parser\Token\Token})
    {call:Kadet\Highlighter\Parser\Token\Token}print{/call:Kadet\Highlighter\Parser\Token\Token}({variable:Kadet\Highlighter\Parser\Token\Token}client{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}user{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}id{/variable.property:Kadet\Highlighter\Parser\Token\Token})
    {call:Kadet\Highlighter\Parser\Token\Token}print{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'------'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken})


@{variable:Kadet\Highlighter\Parser\Token\Token}client{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}event{/variable.property:Kadet\Highlighter\Parser\Token\Token}
async {keyword:Kadet\Highlighter\Parser\Token\Token}def{/keyword:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}on_message{/call:Kadet\Highlighter\Parser\Token\Token}(message):
    matches {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} regex[{string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'score'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}].{call:Kadet\Highlighter\Parser\Token\Token}finditer{/call:Kadet\Highlighter\Parser\Token\Token}({variable:Kadet\Highlighter\Parser\Token\Token}message{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}content{/variable.property:Kadet\Highlighter\Parser\Token\Token})
    {keyword:Kadet\Highlighter\Parser\Token\Token}for{/keyword:Kadet\Highlighter\Parser\Token\Token} match {keyword:Kadet\Highlighter\Parser\Token\Token}in{/keyword:Kadet\Highlighter\Parser\Token\Token} matches:
        user, score {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}match{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}group{/call:Kadet\Highlighter\Parser\Token\Token}({number:Kadet\Highlighter\Parser\Token\Token}1{/number:Kadet\Highlighter\Parser\Token\Token}), {call:Kadet\Highlighter\Parser\Token\Token}get_score{/call:Kadet\Highlighter\Parser\Token\Token}({variable:Kadet\Highlighter\Parser\Token\Token}match{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}group{/call:Kadet\Highlighter\Parser\Token\Token}({number:Kadet\Highlighter\Parser\Token\Token}2{/number:Kadet\Highlighter\Parser\Token\Token}))

        {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}message{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}author{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}id{/variable.property:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}!={/operator:Kadet\Highlighter\Parser\Token\Token} user:
            {keyword:Kadet\Highlighter\Parser\Token\Token}try{/keyword:Kadet\Highlighter\Parser\Token\Token}:
                scores[user] {operator:Kadet\Highlighter\Parser\Token\Token}+={/operator:Kadet\Highlighter\Parser\Token\Token} score
            {keyword:Kadet\Highlighter\Parser\Token\Token}except{/keyword:Kadet\Highlighter\Parser\Token\Token} KeyError:
                scores[user] {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} score

            {call:Kadet\Highlighter\Parser\Token\Token}print{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}"User: {} += {} == {}"{/string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}.{call:Kadet\Highlighter\Parser\Token\Token}format{/call:Kadet\Highlighter\Parser\Token\Token}(user, score, scores[user]))

        {call:Kadet\Highlighter\Parser\Token\Token}save_scores{/call:Kadet\Highlighter\Parser\Token\Token}(scores, {string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}"scores.txt"{/string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken})

    matches {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}re{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}search{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'<@!?{}>{operator.escape:Kadet\Highlighter\Parser\Token\Token}\s{/operator.escape:Kadet\Highlighter\Parser\Token\Token}+({operator.escape:Kadet\Highlighter\Parser\Token\Token}\S{/operator.escape:Kadet\Highlighter\Parser\Token\Token}+)(?:{operator.escape:Kadet\Highlighter\Parser\Token\Token}\s{/operator.escape:Kadet\Highlighter\Parser\Token\Token}*(.*?))?'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}.{call:Kadet\Highlighter\Parser\Token\Token}format{/call:Kadet\Highlighter\Parser\Token\Token}({variable:Kadet\Highlighter\Parser\Token\Token}message{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}server{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}me{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}id{/variable.property:Kadet\Highlighter\Parser\Token\Token}), {variable:Kadet\Highlighter\Parser\Token\Token}message{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}content{/variable.property:Kadet\Highlighter\Parser\Token\Token})
    {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} matches:
        {keyword:Kadet\Highlighter\Parser\Token\Token}try{/keyword:Kadet\Highlighter\Parser\Token\Token}:
            command, args {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}matches{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}group{/call:Kadet\Highlighter\Parser\Token\Token}({number:Kadet\Highlighter\Parser\Token\Token}1{/number:Kadet\Highlighter\Parser\Token\Token}), {variable:Kadet\Highlighter\Parser\Token\Token}matches{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}group{/call:Kadet\Highlighter\Parser\Token\Token}({number:Kadet\Highlighter\Parser\Token\Token}2{/number:Kadet\Highlighter\Parser\Token\Token})

            {call:Kadet\Highlighter\Parser\Token\Token}print{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}"C: {} A: {}"{/string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}.{call:Kadet\Highlighter\Parser\Token\Token}format{/call:Kadet\Highlighter\Parser\Token\Token}(command, args))

            {keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} command {keyword:Kadet\Highlighter\Parser\Token\Token}in{/keyword:Kadet\Highlighter\Parser\Token\Token} [{string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'stats'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}, {string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'staty'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}, {string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'stat'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}]:
                await {variable:Kadet\Highlighter\Parser\Token\Token}client{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}send_message{/call:Kadet\Highlighter\Parser\Token\Token}({variable:Kadet\Highlighter\Parser\Token\Token}message{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}channel{/variable.property:Kadet\Highlighter\Parser\Token\Token}, {string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'{operator.escape:Kadet\Highlighter\Parser\Token\Token}\n{/operator.escape:Kadet\Highlighter\Parser\Token\Token}'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}.{call:Kadet\Highlighter\Parser\Token\Token}join{/call:Kadet\Highlighter\Parser\Token\Token}([{string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'{}: {}'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}.{call:Kadet\Highlighter\Parser\Token\Token}format{/call:Kadet\Highlighter\Parser\Token\Token}({call:Kadet\Highlighter\Parser\Token\Token}get_nick{/call:Kadet\Highlighter\Parser\Token\Token}({variable:Kadet\Highlighter\Parser\Token\Token}message{/variable:Kadet\Highlighter\Parser\Token\Token}.{variable.property:Kadet\Highlighter\Parser\Token\Token}server{/variable.property:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}get_member{/call:Kadet\Highlighter\Parser\Token\Token}(id)), score) {keyword:Kadet\Highlighter\Parser\Token\Token}for{/keyword:Kadet\Highlighter\Parser\Token\Token} id, score {keyword:Kadet\Highlighter\Parser\Token\Token}in{/keyword:Kadet\Highlighter\Parser\Token\Token} {variable:Kadet\Highlighter\Parser\Token\Token}scores{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}items{/call:Kadet\Highlighter\Parser\Token\Token}()]))

        {keyword:Kadet\Highlighter\Parser\Token\Token}except{/keyword:Kadet\Highlighter\Parser\Token\Token} AttributeError:
            {keyword:Kadet\Highlighter\Parser\Token\Token}pass{/keyword:Kadet\Highlighter\Parser\Token\Token}


{keyword:Kadet\Highlighter\Parser\Token\Token}if{/keyword:Kadet\Highlighter\Parser\Token\Token} {constant.special:Kadet\Highlighter\Parser\Token\Token}__name__{/constant.special:Kadet\Highlighter\Parser\Token\Token} {operator:Kadet\Highlighter\Parser\Token\Token}=={/operator:Kadet\Highlighter\Parser\Token\Token} {string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'__main__'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}:
    scores {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {call:Kadet\Highlighter\Parser\Token\Token}load_scores{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken}"scores.txt"{/string.single-line.double:Kadet\Highlighter\Parser\Token\ContextualToken})
    {variable:Kadet\Highlighter\Parser\Token\Token}client{/variable:Kadet\Highlighter\Parser\Token\Token}.{call:Kadet\Highlighter\Parser\Token\Token}run{/call:Kadet\Highlighter\Parser\Token\Token}({string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}'psst, its a secret'{/string.single-line.single:Kadet\Highlighter\Parser\Token\ContextualToken}){/language.python:Kadet\Highlighter\Parser\Token\LanguageToken}