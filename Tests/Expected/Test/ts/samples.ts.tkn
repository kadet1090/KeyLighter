{language.typescript:Kadet\Highlighter\Parser\Token\LanguageToken}{keyword:Kadet\Highlighter\Parser\Token\Token}function{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.function:Kadet\Highlighter\Parser\Token\Token}generic{/symbol.function:Kadet\Highlighter\Parser\Token\Token}<{symbol.type:Kadet\Highlighter\Parser\Token\Token}T{/symbol.type:Kadet\Highlighter\Parser\Token\Token}>(arg: {symbol.type:Kadet\Highlighter\Parser\Token\Token}T{/symbol.type:Kadet\Highlighter\Parser\Token\Token}[]): {symbol.type:Kadet\Highlighter\Parser\Token\Token}T{/symbol.type:Kadet\Highlighter\Parser\Token\Token}[] {
    console.{call:Kadet\Highlighter\Parser\Token\Token}{variable.property:Kadet\Highlighter\Parser\Token\Token}log{/variable.property:Kadet\Highlighter\Parser\Token\Token}{/call:Kadet\Highlighter\Parser\Token\Token}(arg.{variable.property:Kadet\Highlighter\Parser\Token\Token}length{/variable.property:Kadet\Highlighter\Parser\Token\Token}){operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}  {comment:Kadet\Highlighter\Parser\Token\Token}// Array has a .length, so no more error{/comment:Kadet\Highlighter\Parser\Token\Token}
    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} arg {keyword:Kadet\Highlighter\Parser\Token\Token}as{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.type:Kadet\Highlighter\Parser\Token\Token}T{/symbol.type:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{keyword:Kadet\Highlighter\Parser\Token\Token}function{/keyword:Kadet\Highlighter\Parser\Token\Token} {symbol.function:Kadet\Highlighter\Parser\Token\Token}{call:Kadet\Highlighter\Parser\Token\Token}normal{/call:Kadet\Highlighter\Parser\Token\Token}{/symbol.function:Kadet\Highlighter\Parser\Token\Token}(arg: {symbol.type:Kadet\Highlighter\Parser\Token\Token}string{/symbol.type:Kadet\Highlighter\Parser\Token\Token}): {symbol.type:Kadet\Highlighter\Parser\Token\Token}string{/symbol.type:Kadet\Highlighter\Parser\Token\Token} {
    {keyword:Kadet\Highlighter\Parser\Token\Token}return{/keyword:Kadet\Highlighter\Parser\Token\Token} arg{operator.punctuation:Kadet\Highlighter\Parser\Token\Token};{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
}

{keyword:Kadet\Highlighter\Parser\Token\Token}interface{/keyword:Kadet\Highlighter\Parser\Token\Token} XYZ {
    test: {symbol.type:Kadet\Highlighter\Parser\Token\Token}test{/symbol.type:Kadet\Highlighter\Parser\Token\Token}
}

{keyword:Kadet\Highlighter\Parser\Token\Token}let{/keyword:Kadet\Highlighter\Parser\Token\Token} json {operator:Kadet\Highlighter\Parser\Token\Token}={/operator:Kadet\Highlighter\Parser\Token\Token} {
    {comment:Kadet\Highlighter\Parser\Token\Token}// also 'string', keyword: return, and few others{/comment:Kadet\Highlighter\Parser\Token\Token}
    {variable.property:Kadet\Highlighter\Parser\Token\Token}foo{/variable.property:Kadet\Highlighter\Parser\Token\Token}: test{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} {comment:Kadet\Highlighter\Parser\Token\Token}// should not be matched as type{/comment:Kadet\Highlighter\Parser\Token\Token}
    {variable.property:Kadet\Highlighter\Parser\Token\Token}number{/variable.property:Kadet\Highlighter\Parser\Token\Token}: {number:Kadet\Highlighter\Parser\Token\Token}10{/number:Kadet\Highlighter\Parser\Token\Token}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {variable.property:Kadet\Highlighter\Parser\Token\Token}string{/variable.property:Kadet\Highlighter\Parser\Token\Token}: {string.single:Kadet\Highlighter\Parser\Token\ContextualToken}'test'{/string.single:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {variable.property:Kadet\Highlighter\Parser\Token\Token}regex{/variable.property:Kadet\Highlighter\Parser\Token\Token}: {string.regex:Kadet\Highlighter\Parser\Token\Token}/test/g{/string.regex:Kadet\Highlighter\Parser\Token\ContextualToken}{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {variable.property:Kadet\Highlighter\Parser\Token\Token}object{/variable.property:Kadet\Highlighter\Parser\Token\Token}: {
        {variable.property:Kadet\Highlighter\Parser\Token\Token}nested{/variable.property:Kadet\Highlighter\Parser\Token\Token}: {constant.special:Kadet\Highlighter\Parser\Token\Token}true{/constant.special:Kadet\Highlighter\Parser\Token\Token}
    }{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token}
    {variable.property:Kadet\Highlighter\Parser\Token\Token}array{/variable.property:Kadet\Highlighter\Parser\Token\Token}: [ x{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} y{operator.punctuation:Kadet\Highlighter\Parser\Token\Token},{/operator.punctuation:Kadet\Highlighter\Parser\Token\Token} z ]
}

{string.single:Kadet\Highlighter\Parser\Token\ContextualToken}'test with as type in string'{/string.single:Kadet\Highlighter\Parser\Token\ContextualToken}{/language.typescript:Kadet\Highlighter\Parser\Token\LanguageToken}